{
  "contractName": "VestingCapsule",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ENROLLER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWITCHER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "enrollBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "transferBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ENROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWITCHER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"enrollBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"enrollBeneficiary(address)\":{\"params\":{\"_address\":\"Address to the list of token beneficiaries.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferBeneficiary(address)\":{\"params\":{\"_address\":\"Address to the list of token beneficiaries.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"enrollBeneficiary(address)\":{\"notice\":\"Add address to the list of token beneficiaries.\"},\"transferBeneficiary(address)\":{\"notice\":\"Add address to the list of token beneficiaries.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VestingCapsule.sol\":\"VestingCapsule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda1319db846d6d6f92d8a57a9bdee8bde1dc39aa7546165791692c24dd6f30a\",\"dweb:/ipfs/Qma5oZ7DmbdAjd8mpiW7mx896PDtwsQtCQ2hj9Upf7b7JK\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/VestingCapsule.sol\":{\"keccak256\":\"0x6dcf801c026c6f817f42632a014477e30877be173c43aa9ef2e262db0b797137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab3c262fa47f02384842b9bf6a26fc43e03938c421ef89d9352d08be3550278\",\"dweb:/ipfs/Qmd11BxRzgK1WTTdEaX88VG37q4Rayq1939rQ4mJK1eYFC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806352bdf9911161007157806352bdf9911461017457806391d148541461019b578063a217fddf146101ae578063b3feaf0d146101b6578063d547741f146101c9578063f0a3a97c146101dc57600080fd5b806301ffc9a7146100b957806314bbe21c146100e1578063248a9ca3146100f65780632f2ff15d1461012757806336568abe1461013a57806351b169fd1461014d575b600080fd5b6100cc6100c7366004610690565b610203565b60405190151581526020015b60405180910390f35b6100f46100ef3660046106d6565b61023a565b005b6101196101043660046106f1565b60009081526020819052604090206001015490565b6040519081526020016100d8565b6100f461013536600461070a565b61027c565b6100f461014836600461070a565b6102a7565b6101197f462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f999681565b6101197fe25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f890181565b6100cc6101a936600461070a565b610326565b610119600081565b6100f46101c43660046106d6565b61034f565b6100f46101d736600461070a565b61037a565b6101197f3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d0781565b60006001600160e01b03198216637965db0b60e01b148061023457506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fe25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f890161026581336103a0565b6001600160a01b03821661027857600080fd5b5050565b60008281526020819052604090206001015461029881336103a0565b6102a28383610404565b505050565b6001600160a01b038116331461031c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102788282610488565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7f462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f999661026581336103a0565b60008281526020819052604090206001015461039681336103a0565b6102a28383610488565b6103aa8282610326565b610278576103c2816001600160a01b031660146104ed565b6103cd8360206104ed565b6040516020016103de929190610766565b60408051601f198184030181529082905262461bcd60e51b8252610313916004016107db565b61040e8282610326565b610278576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556104443390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6104928282610326565b15610278576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006104fc836002610824565b610507906002610843565b67ffffffffffffffff81111561051f5761051f61085b565b6040519080825280601f01601f191660200182016040528015610549576020820181803683370190505b509050600360fc1b8160008151811061056457610564610871565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061059357610593610871565b60200101906001600160f81b031916908160001a90535060006105b7846002610824565b6105c2906001610843565b90505b600181111561063a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106105f6576105f6610871565b1a60f81b82828151811061060c5761060c610871565b60200101906001600160f81b031916908160001a90535060049490941c9361063381610887565b90506105c5565b5083156106895760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610313565b9392505050565b6000602082840312156106a257600080fd5b81356001600160e01b03198116811461068957600080fd5b80356001600160a01b03811681146106d157600080fd5b919050565b6000602082840312156106e857600080fd5b610689826106ba565b60006020828403121561070357600080fd5b5035919050565b6000806040838503121561071d57600080fd5b8235915061072d602084016106ba565b90509250929050565b60005b83811015610751578181015183820152602001610739565b83811115610760576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161079e816017850160208801610736565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516107cf816028840160208801610736565b01602801949350505050565b60208152600082518060208401526107fa816040850160208701610736565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561083e5761083e61080e565b500290565b600082198211156108565761085661080e565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816108965761089661080e565b50600019019056fea264697066735822122087a4368ef749b4aa4934a8aa26783f388d25b520f3689e0ed14563289c476b1064736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806352bdf9911161007157806352bdf9911461017457806391d148541461019b578063a217fddf146101ae578063b3feaf0d146101b6578063d547741f146101c9578063f0a3a97c146101dc57600080fd5b806301ffc9a7146100b957806314bbe21c146100e1578063248a9ca3146100f65780632f2ff15d1461012757806336568abe1461013a57806351b169fd1461014d575b600080fd5b6100cc6100c7366004610690565b610203565b60405190151581526020015b60405180910390f35b6100f46100ef3660046106d6565b61023a565b005b6101196101043660046106f1565b60009081526020819052604090206001015490565b6040519081526020016100d8565b6100f461013536600461070a565b61027c565b6100f461014836600461070a565b6102a7565b6101197f462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f999681565b6101197fe25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f890181565b6100cc6101a936600461070a565b610326565b610119600081565b6100f46101c43660046106d6565b61034f565b6100f46101d736600461070a565b61037a565b6101197f3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d0781565b60006001600160e01b03198216637965db0b60e01b148061023457506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fe25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f890161026581336103a0565b6001600160a01b03821661027857600080fd5b5050565b60008281526020819052604090206001015461029881336103a0565b6102a28383610404565b505050565b6001600160a01b038116331461031c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102788282610488565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b7f462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f999661026581336103a0565b60008281526020819052604090206001015461039681336103a0565b6102a28383610488565b6103aa8282610326565b610278576103c2816001600160a01b031660146104ed565b6103cd8360206104ed565b6040516020016103de929190610766565b60408051601f198184030181529082905262461bcd60e51b8252610313916004016107db565b61040e8282610326565b610278576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556104443390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6104928282610326565b15610278576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006104fc836002610824565b610507906002610843565b67ffffffffffffffff81111561051f5761051f61085b565b6040519080825280601f01601f191660200182016040528015610549576020820181803683370190505b509050600360fc1b8160008151811061056457610564610871565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061059357610593610871565b60200101906001600160f81b031916908160001a90535060006105b7846002610824565b6105c2906001610843565b90505b600181111561063a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106105f6576105f6610871565b1a60f81b82828151811061060c5761060c610871565b60200101906001600160f81b031916908160001a90535060049490941c9361063381610887565b90506105c5565b5083156106895760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610313565b9392505050565b6000602082840312156106a257600080fd5b81356001600160e01b03198116811461068957600080fd5b80356001600160a01b03811681146106d157600080fd5b919050565b6000602082840312156106e857600080fd5b610689826106ba565b60006020828403121561070357600080fd5b5035919050565b6000806040838503121561071d57600080fd5b8235915061072d602084016106ba565b90509250929050565b60005b83811015610751578181015183820152602001610739565b83811115610760576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161079e816017850160208801610736565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516107cf816028840160208801610736565b01602801949350505050565b60208152600082518060208401526107fa816040850160208701610736565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561083e5761083e61080e565b500290565b600082198211156108565761085661080e565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816108965761089661080e565b50600019019056fea264697066735822122087a4368ef749b4aa4934a8aa26783f388d25b520f3689e0ed14563289c476b1064736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4551:39",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:39",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:39"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:39",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:39",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:39"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:39",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:39",
                "type": ""
              }
            ],
            "src": "14:286:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:39"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:39"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:39"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:39",
                "type": ""
              }
            ],
            "src": "305:187:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:124:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "556:29:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "578:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "565:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:20:39"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "556:5:39"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "648:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "657:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "660:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "650:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "650:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "650:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "607:5:39"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "618:5:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "633:3:39",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "638:1:39",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "629:3:39"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "629:11:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "642:1:39",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "625:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "625:19:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "614:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:31:39"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "604:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:42:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:50:39"
                  },
                  "nodeType": "YulIf",
                  "src": "594:70:39"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "525:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "536:5:39",
                "type": ""
              }
            ],
            "src": "497:173:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:116:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "791:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "800:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "803:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "793:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "793:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "793:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "766:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "775:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "762:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "787:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "758:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "755:52:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "816:39:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "845:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "826:18:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:29:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "816:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "711:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "722:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "734:6:39",
                "type": ""
              }
            ],
            "src": "675:186:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "936:110:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "991:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "994:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "957:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "949:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "946:52:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1007:33:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1030:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1017:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:23:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1007:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "902:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "913:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "925:6:39",
                "type": ""
              }
            ],
            "src": "866:180:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1152:76:39",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1162:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1174:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1185:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1170:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1170:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1162:4:39"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1204:9:39"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1197:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:25:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1197:25:39"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1121:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1132:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1143:4:39",
                "type": ""
              }
            ],
            "src": "1051:177:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:167:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1366:16:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1375:1:39",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1378:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1368:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1368:12:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1368:12:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1341:7:39"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1337:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:23:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1362:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1333:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1333:32:39"
                  },
                  "nodeType": "YulIf",
                  "src": "1330:52:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1391:33:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1414:9:39"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1401:12:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1401:23:39"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:39"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:48:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1466:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1477:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1462:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1462:18:39"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1443:18:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:38:39"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1278:9:39",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1289:7:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1301:6:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1309:6:39",
                "type": ""
              }
            ],
            "src": "1233:254:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1666:237:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1683:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1694:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1676:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1676:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1717:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1728:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1713:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1713:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1733:2:39",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1706:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1706:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1706:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1756:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1767:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1752:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:18:39"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1772:34:39",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1745:62:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1827:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1838:2:39",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1823:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:18:39"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1843:17:39",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1816:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:45:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1816:45:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1870:27:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1882:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1893:3:39",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1878:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:19:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1870:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1643:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1657:4:39",
                "type": ""
              }
            ],
            "src": "1492:411:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1961:205:39",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1971:10:39",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1980:1:39",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1975:1:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2040:63:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2065:3:39"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2070:1:39"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2061:3:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2061:11:39"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2084:3:39"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2089:1:39"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2080:3:39"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2080:11:39"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2074:5:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2074:18:39"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2054:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2054:39:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2054:39:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2001:1:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2004:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1998:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1998:13:39"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2012:19:39",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2014:15:39",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2023:1:39"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2026:2:39",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2019:3:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2019:10:39"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2014:1:39"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1994:3:39",
                    "statements": []
                  },
                  "src": "1990:113:39"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2129:31:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2142:3:39"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2147:6:39"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2138:3:39"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2138:16:39"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2156:1:39",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2131:6:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2131:27:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2131:27:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2118:1:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2121:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2115:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:13:39"
                  },
                  "nodeType": "YulIf",
                  "src": "2112:48:39"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1939:3:39",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1944:3:39",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1949:6:39",
                "type": ""
              }
            ],
            "src": "1908:258:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:397:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2577:3:39"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2582:25:39",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2570:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:38:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:38:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2617:27:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2637:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2631:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2631:13:39"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2621:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2679:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2687:4:39",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2675:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:17:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2698:3:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2703:2:39",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2694:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:12:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2708:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2653:21:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2653:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2653:62:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2724:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2738:3:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2743:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2734:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:16:39"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2728:2:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2770:2:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2774:2:39",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2766:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2766:11:39"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2779:19:39",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2759:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:40:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2759:40:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2808:29:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2830:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2824:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:13:39"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "2812:8:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2872:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2880:4:39",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2868:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2868:17:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2891:2:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2895:2:39",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2887:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2887:11:39"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2900:8:39"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2846:21:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2846:63:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2846:63:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:33:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2933:2:39"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "2937:8:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2929:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2929:17:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2948:2:39",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2925:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:26:39"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2918:3:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2528:3:39",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2533:6:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2541:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2552:3:39",
                "type": ""
              }
            ],
            "src": "2171:786:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3083:262:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3100:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3111:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3093:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3093:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3093:21:39"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3123:27:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3143:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3137:5:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:13:39"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3127:6:39",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3170:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3181:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:18:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3186:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3159:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:34:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3159:34:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3228:6:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3236:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3224:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3224:15:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3245:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3256:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3241:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3241:18:39"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3261:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3202:21:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:66:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3202:66:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3277:62:39",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3293:9:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3312:6:39"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3320:2:39",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3308:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3308:15:39"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3329:2:39",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3325:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3325:7:39"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3304:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3304:29:39"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3289:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3289:45:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3336:2:39",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3285:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:54:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3277:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3052:9:39",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3063:6:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3074:4:39",
                "type": ""
              }
            ],
            "src": "2962:383:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3382:95:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3399:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3406:3:39",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3411:10:39",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3402:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:20:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:31:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:31:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3439:1:39",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3442:4:39",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3432:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3432:15:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3463:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3466:4:39",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3456:15:39"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3350:127:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3534:116:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3593:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3595:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3595:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3595:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3565:1:39"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3558:6:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3558:9:39"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3551:6:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3551:17:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3573:1:39"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3584:1:39",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3580:3:39"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3580:6:39"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3588:1:39"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3576:3:39"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3576:14:39"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3570:2:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3570:21:39"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3547:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:45:39"
                  },
                  "nodeType": "YulIf",
                  "src": "3544:71:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:20:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3639:1:39"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3642:1:39"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3635:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3635:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3624:7:39"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3513:1:39",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3516:1:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3522:7:39",
                "type": ""
              }
            ],
            "src": "3482:168:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3703:80:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3730:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3732:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3732:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3732:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3719:1:39"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3726:1:39"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3722:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3722:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3716:2:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3716:13:39"
                  },
                  "nodeType": "YulIf",
                  "src": "3713:39:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3761:16:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3772:1:39"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3775:1:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3768:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3768:9:39"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3761:3:39"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3686:1:39",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3689:1:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3695:3:39",
                "type": ""
              }
            ],
            "src": "3655:128:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3820:95:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3837:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3844:3:39",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3849:10:39",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3840:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3840:20:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3830:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:31:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3830:31:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3877:1:39",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3880:4:39",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3870:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3870:15:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3901:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3904:4:39",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3894:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3894:15:39"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3788:127:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3952:95:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3969:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3976:3:39",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3981:10:39",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3972:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3972:20:39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3962:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:31:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3962:31:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4009:1:39",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4012:4:39",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4002:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4002:15:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4033:1:39",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4036:4:39",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4026:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4026:15:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4026:15:39"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "3920:127:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4099:89:39",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4126:22:39",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4128:16:39"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4128:18:39"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4128:18:39"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4119:5:39"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4112:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4112:13:39"
                  },
                  "nodeType": "YulIf",
                  "src": "4109:39:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4157:25:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4168:5:39"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4179:1:39",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4175:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4175:6:39"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4164:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4164:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4157:3:39"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4081:5:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4091:3:39",
                "type": ""
              }
            ],
            "src": "4052:136:39"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4367:182:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4384:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4395:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4377:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4377:21:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4377:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4418:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4429:2:39",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4414:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:18:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4434:2:39",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4407:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4407:30:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4407:30:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4457:9:39"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4468:2:39",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4453:3:39"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4453:18:39"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4473:34:39",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4446:6:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4446:62:39"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4446:62:39"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4517:26:39",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4529:9:39"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4540:2:39",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4525:3:39"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:18:39"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4517:4:39"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4344:9:39",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4358:4:39",
                "type": ""
              }
            ],
            "src": "4193:356:39"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 39,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "346:992:28:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "346:992:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:39;;463:22;445:41;;433:2;418:18;2620:202:0;;;;;;;;1190:146:28;;;;;;:::i;:::-;;:::i;:::-;;4008:129:0;;;;;;:::i;:::-;4082:7;4108:12;;;;;;;;;;:22;;;;4008:129;;;;1197:25:39;;;1185:2;1170:18;4008:129:0;1051:177:39;4387:145:0;;;;;;:::i;:::-;;:::i;5404:214::-;;;;;;:::i;:::-;;:::i;476:66:28:-;;516:26;476:66;;548;;588:26;548:66;;2909:145:0;;;;;;:::i;:::-;;:::i;2027:49::-;;2072:4;2027:49;;894:144:28;;;;;;:::i;:::-;;:::i;4766:147:0:-;;;;;;:::i;:::-;;:::i;620:68:28:-;;661:27;620:68;;2620:202:0;2705:4;-1:-1:-1;;;;;;2728:47:0;;-1:-1:-1;;;2728:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:22;;;2779:36:0;2721:94;2620:202;-1:-1:-1;;2620:202:0:o;1190:146:28:-;588:26;2505:30:0;588:26:28;719:10:17;2505::0;:30::i;:::-;-1:-1:-1;;;;;1306:22:28;::::1;1298:31;;;::::0;::::1;;1190:146:::0;;:::o;4387:145:0:-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:17;2505::0;:30::i;:::-;4500:25:::1;4511:4;4517:7;4500:10;:25::i;:::-;4387:145:::0;;;:::o;5404:214::-;-1:-1:-1;;;;;5499:23:0;;719:10:17;5499:23:0;5491:83;;;;-1:-1:-1;;;5491:83:0;;1694:2:39;5491:83:0;;;1676:21:39;1733:2;1713:18;;;1706:30;1772:34;1752:18;;;1745:62;-1:-1:-1;;;1823:18:39;;;1816:45;1878:19;;5491:83:0;;;;;;;;;5585:26;5597:4;5603:7;5585:11;:26::i;2909:145::-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:0;;;;;;;;;;;;;;;2909:145::o;894:144:28:-;516:26;2505:30:0;516:26:28;719:10:17;2505::0;:30::i;4766:147::-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:17;2505::0;:30::i;:::-;4880:26:::1;4892:4;4898:7;4880:11;:26::i;3335:492::-:0;3423:22;3431:4;3437:7;3423;:22::i;:::-;3418:403;;3606:41;3634:7;-1:-1:-1;;;;;3606:41:0;3644:2;3606:19;:41::i;:::-;3718:38;3746:4;3753:2;3718:19;:38::i;:::-;3513:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3513:265:0;;;;;;;;;;-1:-1:-1;;;3461:349:0;;;;;;;:::i;6861:233::-;6944:22;6952:4;6958:7;6944;:22::i;:::-;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:0;;;;;;;;;:36;;-1:-1:-1;;6982:36:0;7014:4;6982:36;;;7064:12;719:10:17;;640:96;7064:12:0;-1:-1:-1;;;;;7037:40:0;7055:7;-1:-1:-1;;;;;7037:40:0;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;7219:234::-;7302:22;7310:4;7316:7;7302;:22::i;:::-;7298:149;;;7372:5;7340:12;;;;;;;;;;;-1:-1:-1;;;;;7340:29:0;;;;;;;;;;:37;;-1:-1:-1;;7340:37:0;;;7396:40;719:10:17;;7340:12:0;;7396:40;;7372:5;7396:40;7219:234;;:::o;1588:441:19:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:19;;1688:47;;-1:-1:-1;;;1745:6:19;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:19;;;;;;;;;-1:-1:-1;;;1770:6:19;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1770:15:19;;;;;;;;-1:-1:-1;1800:9:19;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:19;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1854:37:19;;;;;;;;-1:-1:-1;1915:1:19;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:19;;1936:55;;;;-1:-1:-1;;;1936:55:19;;4395:2:39;1936:55:19;;;4377:21:39;;;4414:18;;;4407:30;4473:34;4453:18;;;4446:62;4525:18;;1936:55:19;4193:356:39;1936:55:19;2015:6;1588:441;-1:-1:-1;;;1588:441:19:o;14:286:39:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:39;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:39;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;866:180::-;925:6;978:2;966:9;957:7;953:23;949:32;946:52;;;994:1;991;984:12;946:52;-1:-1:-1;1017:23:39;;866:180;-1:-1:-1;866:180:39:o;1233:254::-;1301:6;1309;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1414:9;1401:23;1391:33;;1443:38;1477:2;1466:9;1462:18;1443:38;:::i;:::-;1433:48;;1233:254;;;;;:::o;1908:258::-;1980:1;1990:113;2004:6;2001:1;1998:13;1990:113;;;2080:11;;;2074:18;2061:11;;;2054:39;2026:2;2019:10;1990:113;;;2121:6;2118:1;2115:13;2112:48;;;2156:1;2147:6;2142:3;2138:16;2131:27;2112:48;;1908:258;;;:::o;2171:786::-;2582:25;2577:3;2570:38;2552:3;2637:6;2631:13;2653:62;2708:6;2703:2;2698:3;2694:12;2687:4;2679:6;2675:17;2653:62;:::i;:::-;-1:-1:-1;;;2774:2:39;2734:16;;;2766:11;;;2759:40;2824:13;;2846:63;2824:13;2895:2;2887:11;;2880:4;2868:17;;2846:63;:::i;:::-;2929:17;2948:2;2925:26;;2171:786;-1:-1:-1;;;;2171:786:39:o;2962:383::-;3111:2;3100:9;3093:21;3074:4;3143:6;3137:13;3186:6;3181:2;3170:9;3166:18;3159:34;3202:66;3261:6;3256:2;3245:9;3241:18;3236:2;3228:6;3224:15;3202:66;:::i;:::-;3329:2;3308:15;-1:-1:-1;;3304:29:39;3289:45;;;;3336:2;3285:54;;2962:383;-1:-1:-1;;2962:383:39:o;3350:127::-;3411:10;3406:3;3402:20;3399:1;3392:31;3442:4;3439:1;3432:15;3466:4;3463:1;3456:15;3482:168;3522:7;3588:1;3584;3580:6;3576:14;3573:1;3570:21;3565:1;3558:9;3551:17;3547:45;3544:71;;;3595:18;;:::i;:::-;-1:-1:-1;3635:9:39;;3482:168::o;3655:128::-;3695:3;3726:1;3722:6;3719:1;3716:13;3713:39;;;3732:18;;:::i;:::-;-1:-1:-1;3768:9:39;;3655:128::o;3788:127::-;3849:10;3844:3;3840:20;3837:1;3830:31;3880:4;3877:1;3870:15;3904:4;3901:1;3894:15;3920:127;3981:10;3976:3;3972:20;3969:1;3962:31;4012:4;4009:1;4002:15;4036:4;4033:1;4026:15;4052:136;4091:3;4119:5;4109:39;;4128:18;;:::i;:::-;-1:-1:-1;;;4164:18:39;;4052:136::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract VestingCapsule is Context, AccessControl {\n    using SafeERC20 for IERC20;\n    using Counters for Counters.Counter;\n\n    bytes32 public constant ENROLLER_ROLE = keccak256(\"ENROLLER_ROLE\");\n    bytes32 public constant SWITCHER_ROLE = keccak256(\"SWITCHER_ROLE\");\n    bytes32 public constant TREASURER_ROLE = keccak256(\"TREASURER_ROLE\");\n\n    Counters.Counter private _beneficiaryIdCounter;\n\n    /**\n     * @notice Add address to the list of token beneficiaries.\n     * @param _address Address to the list of token beneficiaries.\n     */\n    function enrollBeneficiary(address _address)\n        public\n        onlyRole(ENROLLER_ROLE)\n    {\n        require(_address != address(0));\n    }\n\n    /**\n     * @notice Add address to the list of token beneficiaries.\n     * @param _address Address to the list of token beneficiaries.\n     */\n    function transferBeneficiary(address _address)\n        public\n        onlyRole(SWITCHER_ROLE)\n    {\n        require(_address != address(0));\n    }\n}\n",
  "sourcePath": "/Users/rileystephens/Development/Accel/phlip.io/phlip-contracts/contracts/VestingCapsule.sol",
  "ast": {
    "absolutePath": "project:/contracts/VestingCapsule.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "Address": [
        3674
      ],
      "Context": [
        3696
      ],
      "Counters": [
        3770
      ],
      "ERC165": [
        4558
      ],
      "IAccessControl": [
        381
      ],
      "IERC165": [
        4570
      ],
      "IERC20": [
        1217
      ],
      "SafeERC20": [
        2352
      ],
      "Strings": [
        3973
      ],
      "VestingCapsule": [
        5161
      ]
    },
    "id": 5162,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5087,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 5088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 309,
        "src": "58:58:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 5089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 3697,
        "src": "117:51:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 3771,
        "src": "169:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 1218,
        "src": "222:56:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 5092,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 2353,
        "src": "279:65:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5093,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3696,
              "src": "373:7:28"
            },
            "id": 5094,
            "nodeType": "InheritanceSpecifier",
            "src": "373:7:28"
          },
          {
            "baseName": {
              "id": 5095,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "382:13:28"
            },
            "id": 5096,
            "nodeType": "InheritanceSpecifier",
            "src": "382:13:28"
          }
        ],
        "canonicalName": "VestingCapsule",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5161,
        "linearizedBaseContracts": [
          5161,
          308,
          4558,
          4570,
          381,
          3696
        ],
        "name": "VestingCapsule",
        "nameLocation": "355:14:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5100,
            "libraryName": {
              "id": 5097,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2352,
              "src": "408:9:28"
            },
            "nodeType": "UsingForDirective",
            "src": "402:27:28",
            "typeName": {
              "id": 5099,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5098,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1217,
                "src": "422:6:28"
              },
              "referencedDeclaration": 1217,
              "src": "422:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1217",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5104,
            "libraryName": {
              "id": 5101,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3770,
              "src": "440:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "434:36:28",
            "typeName": {
              "id": 5103,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5102,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3702,
                "src": "453:16:28"
              },
              "referencedDeclaration": 3702,
              "src": "453:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3702_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "51b169fd",
            "id": 5109,
            "mutability": "constant",
            "name": "ENROLLER_ROLE",
            "nameLocation": "500:13:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "476:66:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5105,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "476:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454e524f4c4c45525f524f4c45",
                  "id": 5107,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "526:15:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f9996",
                    "typeString": "literal_string \"ENROLLER_ROLE\""
                  },
                  "value": "ENROLLER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f9996",
                    "typeString": "literal_string \"ENROLLER_ROLE\""
                  }
                ],
                "id": 5106,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "516:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "516:26:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "52bdf991",
            "id": 5114,
            "mutability": "constant",
            "name": "SWITCHER_ROLE",
            "nameLocation": "572:13:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "548:66:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5110,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53574954434845525f524f4c45",
                  "id": 5112,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "598:15:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f8901",
                    "typeString": "literal_string \"SWITCHER_ROLE\""
                  },
                  "value": "SWITCHER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f8901",
                    "typeString": "literal_string \"SWITCHER_ROLE\""
                  }
                ],
                "id": 5111,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "588:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "588:26:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f0a3a97c",
            "id": 5119,
            "mutability": "constant",
            "name": "TREASURER_ROLE",
            "nameLocation": "644:14:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "620:68:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5115,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "620:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452454153555245525f524f4c45",
                  "id": 5117,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "671:16:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d07",
                    "typeString": "literal_string \"TREASURER_ROLE\""
                  },
                  "value": "TREASURER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d07",
                    "typeString": "literal_string \"TREASURER_ROLE\""
                  }
                ],
                "id": 5116,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "661:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "661:27:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5122,
            "mutability": "mutable",
            "name": "_beneficiaryIdCounter",
            "nameLocation": "720:21:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "695:46:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3702_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 5121,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5120,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3702,
                "src": "695:16:28"
              },
              "referencedDeclaration": 3702,
              "src": "695:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3702_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5140,
              "nodeType": "Block",
              "src": "990:48:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5132,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5125,
                          "src": "1008:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1028:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1020:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1020:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1020:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1008:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1000:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5139,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:31:28"
                }
              ]
            },
            "documentation": {
              "id": 5123,
              "nodeType": "StructuredDocumentation",
              "src": "748:141:28",
              "text": " @notice Add address to the list of token beneficiaries.\n @param _address Address to the list of token beneficiaries."
            },
            "functionSelector": "b3feaf0d",
            "id": 5141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5128,
                    "name": "ENROLLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5109,
                    "src": "971:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5127,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "962:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:23:28"
              }
            ],
            "name": "enrollBeneficiary",
            "nameLocation": "903:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5125,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "929:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "921:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "920:18:28"
            },
            "returnParameters": {
              "id": 5130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:28"
            },
            "scope": 5161,
            "src": "894:144:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5159,
              "nodeType": "Block",
              "src": "1288:48:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5151,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "1306:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1326:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1318:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1318:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1318:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1306:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1298:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5158,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:31:28"
                }
              ]
            },
            "documentation": {
              "id": 5142,
              "nodeType": "StructuredDocumentation",
              "src": "1044:141:28",
              "text": " @notice Add address to the list of token beneficiaries.\n @param _address Address to the list of token beneficiaries."
            },
            "functionSelector": "14bbe21c",
            "id": 5160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5147,
                    "name": "SWITCHER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5114,
                    "src": "1269:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5146,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1260:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1260:23:28"
              }
            ],
            "name": "transferBeneficiary",
            "nameLocation": "1199:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5144,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1227:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "1219:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:18:28"
            },
            "returnParameters": {
              "id": 5149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:28"
            },
            "scope": 5161,
            "src": "1190:146:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5162,
        "src": "346:992:28",
        "usedErrors": []
      }
    ],
    "src": "32:1307:28"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/VestingCapsule.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "Address": [
        3674
      ],
      "Context": [
        3696
      ],
      "Counters": [
        3770
      ],
      "ERC165": [
        4558
      ],
      "IAccessControl": [
        381
      ],
      "IERC165": [
        4570
      ],
      "IERC20": [
        1217
      ],
      "SafeERC20": [
        2352
      ],
      "Strings": [
        3973
      ],
      "VestingCapsule": [
        5161
      ]
    },
    "id": 5162,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5087,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 5088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 309,
        "src": "58:58:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 5089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 3697,
        "src": "117:51:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 5090,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 3771,
        "src": "169:52:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5091,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 1218,
        "src": "222:56:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 5092,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5162,
        "sourceUnit": 2353,
        "src": "279:65:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5093,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3696,
              "src": "373:7:28"
            },
            "id": 5094,
            "nodeType": "InheritanceSpecifier",
            "src": "373:7:28"
          },
          {
            "baseName": {
              "id": 5095,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 308,
              "src": "382:13:28"
            },
            "id": 5096,
            "nodeType": "InheritanceSpecifier",
            "src": "382:13:28"
          }
        ],
        "canonicalName": "VestingCapsule",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5161,
        "linearizedBaseContracts": [
          5161,
          308,
          4558,
          4570,
          381,
          3696
        ],
        "name": "VestingCapsule",
        "nameLocation": "355:14:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5100,
            "libraryName": {
              "id": 5097,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2352,
              "src": "408:9:28"
            },
            "nodeType": "UsingForDirective",
            "src": "402:27:28",
            "typeName": {
              "id": 5099,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5098,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1217,
                "src": "422:6:28"
              },
              "referencedDeclaration": 1217,
              "src": "422:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1217",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 5104,
            "libraryName": {
              "id": 5101,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3770,
              "src": "440:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "434:36:28",
            "typeName": {
              "id": 5103,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5102,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3702,
                "src": "453:16:28"
              },
              "referencedDeclaration": 3702,
              "src": "453:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3702_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "51b169fd",
            "id": 5109,
            "mutability": "constant",
            "name": "ENROLLER_ROLE",
            "nameLocation": "500:13:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "476:66:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5105,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "476:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454e524f4c4c45525f524f4c45",
                  "id": 5107,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "526:15:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f9996",
                    "typeString": "literal_string \"ENROLLER_ROLE\""
                  },
                  "value": "ENROLLER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_462bd302974b44ee0aa0f437807615ac99fec0706b31a95596f2180b4d3f9996",
                    "typeString": "literal_string \"ENROLLER_ROLE\""
                  }
                ],
                "id": 5106,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "516:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "516:26:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "52bdf991",
            "id": 5114,
            "mutability": "constant",
            "name": "SWITCHER_ROLE",
            "nameLocation": "572:13:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "548:66:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5110,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53574954434845525f524f4c45",
                  "id": 5112,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "598:15:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f8901",
                    "typeString": "literal_string \"SWITCHER_ROLE\""
                  },
                  "value": "SWITCHER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e25884474344f1801dfe782f0324ae3ca430d26218e1ec0c99c86638e78f8901",
                    "typeString": "literal_string \"SWITCHER_ROLE\""
                  }
                ],
                "id": 5111,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "588:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "588:26:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f0a3a97c",
            "id": 5119,
            "mutability": "constant",
            "name": "TREASURER_ROLE",
            "nameLocation": "644:14:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "620:68:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5115,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "620:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5452454153555245525f524f4c45",
                  "id": 5117,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "671:16:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d07",
                    "typeString": "literal_string \"TREASURER_ROLE\""
                  },
                  "value": "TREASURER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3496e2e73c4d42b75d702e60d9e48102720b8691234415963a5a857b86425d07",
                    "typeString": "literal_string \"TREASURER_ROLE\""
                  }
                ],
                "id": 5116,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "661:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "661:27:28",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5122,
            "mutability": "mutable",
            "name": "_beneficiaryIdCounter",
            "nameLocation": "720:21:28",
            "nodeType": "VariableDeclaration",
            "scope": 5161,
            "src": "695:46:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$3702_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 5121,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5120,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3702,
                "src": "695:16:28"
              },
              "referencedDeclaration": 3702,
              "src": "695:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$3702_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5140,
              "nodeType": "Block",
              "src": "990:48:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5132,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5125,
                          "src": "1008:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1028:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1020:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1020:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1020:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1008:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1000:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5139,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:31:28"
                }
              ]
            },
            "documentation": {
              "id": 5123,
              "nodeType": "StructuredDocumentation",
              "src": "748:141:28",
              "text": " @notice Add address to the list of token beneficiaries.\n @param _address Address to the list of token beneficiaries."
            },
            "functionSelector": "b3feaf0d",
            "id": 5141,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5128,
                    "name": "ENROLLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5109,
                    "src": "971:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5127,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "962:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "962:23:28"
              }
            ],
            "name": "enrollBeneficiary",
            "nameLocation": "903:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5125,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "929:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "921:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "920:18:28"
            },
            "returnParameters": {
              "id": 5130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:0:28"
            },
            "scope": 5161,
            "src": "894:144:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5159,
              "nodeType": "Block",
              "src": "1288:48:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5151,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5144,
                          "src": "1306:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1326:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1318:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1318:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1318:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1306:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1298:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:31:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5158,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:31:28"
                }
              ]
            },
            "documentation": {
              "id": 5142,
              "nodeType": "StructuredDocumentation",
              "src": "1044:141:28",
              "text": " @notice Add address to the list of token beneficiaries.\n @param _address Address to the list of token beneficiaries."
            },
            "functionSelector": "14bbe21c",
            "id": 5160,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5147,
                    "name": "SWITCHER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5114,
                    "src": "1269:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 5148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5146,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1260:8:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "1260:23:28"
              }
            ],
            "name": "transferBeneficiary",
            "nameLocation": "1199:19:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5144,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1227:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "1219:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:18:28"
            },
            "returnParameters": {
              "id": 5149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:28"
            },
            "scope": 5161,
            "src": "1190:146:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5162,
        "src": "346:992:28",
        "usedErrors": []
      }
    ],
    "src": "32:1307:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-08T18:12:57.728Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "enrollBeneficiary(address)": {
        "params": {
          "_address": "Address to the list of token beneficiaries."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferBeneficiary(address)": {
        "params": {
          "_address": "Address to the list of token beneficiaries."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "enrollBeneficiary(address)": {
        "notice": "Add address to the list of token beneficiaries."
      },
      "transferBeneficiary(address)": {
        "notice": "Add address to the list of token beneficiaries."
      }
    },
    "version": 1
  }
}